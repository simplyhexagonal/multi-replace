{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["export type MultiReplaceMatcher = string | RegExp;\n\nexport type MultiReplaceReplacement = string | (\n  (substring: string, ...args: any[]) => Promise<string>\n);\n\nexport type MultiReplaceSyncReplacement = string | (\n  (substring: string, ...args: any[]) => string\n);\n\nexport type MultiReplacePatterns = [MultiReplaceMatcher, MultiReplaceReplacement][];\n\nexport type MultiReplaceSyncPatterns = [MultiReplaceMatcher, MultiReplaceSyncReplacement][];\n\nexport const multiReplace = async (\n  content: string | Promise<string>,\n  replacePatterns: MultiReplacePatterns,\n): Promise<string> => {\n  const promise = replacePatterns.reduce(\n    // @ts-ignore\n    async (a, [matcher, replacement]) => {\n      const prevReplaceResult = await a;\n\n      if (typeof replacement === 'string') {\n        return Promise.resolve(prevReplaceResult.replace(matcher, replacement));\n      }\n\n      let c: Promise<string>[] = [];\n\n      prevReplaceResult.replace(matcher, (substring: string, ...args: any[]) => {\n        c.push(replacement(substring, ...args));\n\n        return '';\n      });\n\n      const result = (await Promise.all(c)).reduce(\n        (a, b, i, arr) => a.replace(matcher, () => arr.shift() as string),\n        prevReplaceResult,\n      );\n\n      return Promise.resolve(result);\n    },\n    Promise.resolve(content),\n  );\n\n  return await promise;\n}\n\nexport const multiReplaceSync = (\n  content: string,\n  replacePatterns: MultiReplaceSyncPatterns,\n) => replacePatterns.reduce(\n  // @ts-ignore\n  (a, b) => a.replace(...b),\n  content,\n);\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcO,MAAM,eAAe,OAC1B,SACA,oBACoB;AACpB,UAAM,UAAU,gBAAgB,OAE9B,OAAO,GAAG,CAAC,SAAS,iBAAiB;AACnC,YAAM,oBAAoB,MAAM;AAEhC,UAAI,OAAO,gBAAgB,UAAU;AACnC,eAAO,QAAQ,QAAQ,kBAAkB,QAAQ,SAAS;AAAA;AAG5D,UAAI,IAAuB;AAE3B,wBAAkB,QAAQ,SAAS,CAAC,cAAsB,SAAgB;AACxE,UAAE,KAAK,YAAY,WAAW,GAAG;AAEjC,eAAO;AAAA;AAGT,YAAM,SAAU,OAAM,QAAQ,IAAI,IAAI,OACpC,CAAC,IAAG,GAAG,GAAG,QAAQ,GAAE,QAAQ,SAAS,MAAM,IAAI,UAC/C;AAGF,aAAO,QAAQ,QAAQ;AAAA,OAEzB,QAAQ,QAAQ;AAGlB,WAAO,MAAM;AAAA;AAGR,MAAM,mBAAmB,CAC9B,SACA,oBACG,gBAAgB,OAEnB,CAAC,GAAG,MAAM,EAAE,QAAQ,GAAG,IACvB;",
  "names": []
}
