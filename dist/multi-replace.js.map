{
  "version": 3,
  "sources": ["../src/index.ts", "../package.json"],
  "sourcesContent": ["// @ts-ignore\nexport { version } from '../package.json';\n\nexport type MultiReplaceMatcher = string | RegExp;\n\nexport type MultiReplaceReplacement = string | (\n  (substring: string, ...args: any[]) => Promise<string>\n);\n\nexport type MultiReplaceSyncReplacement = string | (\n  (substring: string, ...args: any[]) => string\n);\n\nexport type MultiReplacePatterns = [MultiReplaceMatcher, MultiReplaceReplacement][];\n\nexport type MultiReplaceSyncPatterns = [MultiReplaceMatcher, MultiReplaceSyncReplacement][];\n\nexport const multiReplace = async (\n  content: string | Promise<string>,\n  replacePatterns: MultiReplacePatterns,\n): Promise<string> => {\n  const promise = replacePatterns.reduce(\n    // @ts-ignore\n    async (a, [matcher, replacement]) => {\n      const prevReplaceResult = await a;\n\n      if (typeof replacement === 'string') {\n        return Promise.resolve(prevReplaceResult.replace(matcher, replacement));\n      }\n\n      let c: Promise<string>[] = [];\n\n      prevReplaceResult.replace(matcher, (substring: string, ...args: any[]) => {\n        c.push(replacement(substring, ...args));\n\n        return '';\n      });\n\n      const result = (await Promise.all(c)).reduce(\n        (a, b, i, arr) => a.replace(matcher, () => arr.shift() as string),\n        prevReplaceResult,\n      );\n\n      return Promise.resolve(result);\n    },\n    Promise.resolve(content),\n  );\n\n  return await promise;\n}\n\nexport const multiReplaceSync = (\n  content: string,\n  replacePatterns: MultiReplaceSyncPatterns,\n) => replacePatterns.reduce(\n  // @ts-ignore\n  (a, b) => a.replace(...b),\n  content,\n);\n", "{\n  \"name\": \"@simplyhexagonal/multi-replace\",\n  \"version\": \"1.1.0\",\n  \"description\": \"Functions to easily perform various replace operations on a Javascript/Typescript string\",\n  \"private\": false,\n  \"main\": \"dist/multi-replace.js\",\n  \"types\": \"dist/multi-replace.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/simplyhexagonal/multi-replace\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Jean M. Lescure\",\n      \"email\": \"opensource@jeanlescure.io\",\n      \"url\": \"https://simplyhexagonal.org/\"\n    }\n  ],\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"build\": \"./scripts/build\",\n    \"release\": \"release-it\"\n  },\n  \"release-it\": {\n    \"git\": {\n      \"changelog\": \"auto-changelog --stdout -l false -u -t ./assets/changelog-compact.hbs\"\n    },\n    \"hooks\": {\n      \"after:bump\": \"./scripts/release\"\n    },\n    \"npm\": {\n      \"publish\": false\n    }\n  },\n  \"files\": [\n    \"dist\",\n    \"runkit.js\",\n    \"README.md\",\n    \"package.json\"\n  ],\n  \"runkitExampleFilename\": \"./runkit.js\",\n  \"devDependencies\": {\n    \"@types/jest\": \"^29.5.5\",\n    \"@types/node\": \"^20.6.3\",\n    \"auto-changelog\": \"^2.4.0\",\n    \"esbuild\": \"^0.19.3\",\n    \"jest\": \"^29.7.0\",\n    \"refup\": \"^1.1.0\",\n    \"release-it\": \"^16.2.0\",\n    \"ts-jest\": \"^29.1.1\",\n    \"ts-node\": \"^10.9.1\",\n    \"ts-node-dev\": \"^2.0.0\",\n    \"tslib\": \"^2.6.2\",\n    \"typescript\": \"^5.2.2\"\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEE,gBAAW;;;ADeN,MAAM,eAAe,OAC1B,SACA,oBACoB;AACpB,UAAM,UAAU,gBAAgB;AAAA;AAAA,MAE9B,OAAO,GAAG,CAAC,SAAS,WAAW,MAAM;AACnC,cAAM,oBAAoB,MAAM;AAEhC,YAAI,OAAO,gBAAgB,UAAU;AACnC,iBAAO,QAAQ,QAAQ,kBAAkB,QAAQ,SAAS,WAAW,CAAC;AAAA,QACxE;AAEA,YAAI,IAAuB,CAAC;AAE5B,0BAAkB,QAAQ,SAAS,CAAC,cAAsB,SAAgB;AACxE,YAAE,KAAK,YAAY,WAAW,GAAG,IAAI,CAAC;AAEtC,iBAAO;AAAA,QACT,CAAC;AAED,cAAM,UAAU,MAAM,QAAQ,IAAI,CAAC,GAAG;AAAA,UACpC,CAACA,IAAG,GAAG,GAAG,QAAQA,GAAE,QAAQ,SAAS,MAAM,IAAI,MAAM,CAAW;AAAA,UAChE;AAAA,QACF;AAEA,eAAO,QAAQ,QAAQ,MAAM;AAAA,MAC/B;AAAA,MACA,QAAQ,QAAQ,OAAO;AAAA,IACzB;AAEA,WAAO,MAAM;AAAA,EACf;AAEO,MAAM,mBAAmB,CAC9B,SACA,oBACG,gBAAgB;AAAA;AAAA,IAEnB,CAAC,GAAG,MAAM,EAAE,QAAQ,GAAG,CAAC;AAAA,IACxB;AAAA,EACF;",
  "names": ["a"]
}
